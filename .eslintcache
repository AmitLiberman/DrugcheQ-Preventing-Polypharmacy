[{"C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\index.js":"1","C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\App.js":"2","C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Constants\\ActionNav.js":"3","C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Constants\\TopNav.js":"4","C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Constants\\Home.js":"5","C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\DrugInsert\\DrugInsert.js":"6","C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\DrugList\\DrugList.js":"7","C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\DrugItem\\DrugItem.js":"8","C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\SideEffectReport\\SideEffectReport.js":"9","C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\InteractionChecker\\InteractionChecker.js":"10","C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\Report\\Report.js":"11","C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\InteractionResults\\InteractionResults.js":"12","C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\DrugSearch\\DrugSearch.js":"13","C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\MasterReport\\MasterReport.js":"14","C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\Step1\\Step1.js":"15","C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\Step3\\Step3.js":"16","C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\Step2\\Step2.js":"17","C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Constants\\BottomNav.js":"18","C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\DrugSearchResults\\DrugSearchResults.js":"19","C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\DrugSearchInput\\DrugSearchInput.js":"20","C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\ModalBox\\ModalBox.js":"21","C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\RemedyInsert\\RemedyInsert.js":"22","C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\RemedyContainer\\RemedyContainer.js":"23"},{"size":228,"mtime":1615289667140,"results":"24","hashOfConfig":"25"},{"size":1624,"mtime":1619074976820,"results":"26","hashOfConfig":"25"},{"size":1423,"mtime":1614353233627,"results":"27","hashOfConfig":"25"},{"size":1828,"mtime":1619083768297,"results":"28","hashOfConfig":"25"},{"size":304,"mtime":1617857299744,"results":"29","hashOfConfig":"25"},{"size":5483,"mtime":1617858561475,"results":"30","hashOfConfig":"25"},{"size":414,"mtime":1612106792831,"results":"31","hashOfConfig":"25"},{"size":521,"mtime":1617114684725,"results":"32","hashOfConfig":"25"},{"size":3175,"mtime":1610895718263,"results":"33","hashOfConfig":"25"},{"size":4536,"mtime":1618807302127,"results":"34","hashOfConfig":"25"},{"size":4604,"mtime":1618807031350,"results":"35","hashOfConfig":"25"},{"size":2296,"mtime":1616994205875,"results":"36","hashOfConfig":"25"},{"size":1410,"mtime":1617857349804,"results":"37","hashOfConfig":"25"},{"size":6618,"mtime":1619082217723,"results":"38","hashOfConfig":"25"},{"size":3297,"mtime":1619082212214,"results":"39","hashOfConfig":"25"},{"size":1396,"mtime":1616234308588,"results":"40","hashOfConfig":"25"},{"size":1132,"mtime":1619082213288,"results":"41","hashOfConfig":"25"},{"size":1799,"mtime":1614507663821,"results":"42","hashOfConfig":"25"},{"size":6962,"mtime":1617770707618,"results":"43","hashOfConfig":"25"},{"size":5077,"mtime":1617857366665,"results":"44","hashOfConfig":"25"},{"size":667,"mtime":1616227427975,"results":"45","hashOfConfig":"25"},{"size":4691,"mtime":1619086266799,"results":"46","hashOfConfig":"25"},{"size":5134,"mtime":1619085976474,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1rdyl2l",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\index.js",[],["98","99"],"C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\App.js",[],"C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Constants\\ActionNav.js",[],"C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Constants\\TopNav.js",[],"C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Constants\\Home.js",[],"C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\DrugInsert\\DrugInsert.js",[],"C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\DrugList\\DrugList.js",[],"C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\DrugItem\\DrugItem.js",["100"],"import React, { Component } from \"react\";\r\nimport \"./DrugItem.css\";\r\n\r\nclass DrugItem extends Component {\r\n  render() {\r\n    const { id, name } = this.props.drugItem;\r\n    return (\r\n      <div className=\"drug-item-container\">\r\n        <button\r\n          onClick={this.props.delDrug.bind(this, id)}\r\n          className=\"btn btn-danger delete-item-btn\"\r\n        >\r\n          x\r\n        </button>\r\n\r\n        <p className=\"drug-item\">{this.props.drugItem.name}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DrugItem;\r\n","C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\SideEffectReport\\SideEffectReport.js",[],["101","102"],"C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\InteractionChecker\\InteractionChecker.js",[],"C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\Report\\Report.js",[],"C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\InteractionResults\\InteractionResults.js",[],"C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\DrugSearch\\DrugSearch.js",[],"C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\MasterReport\\MasterReport.js",[],"C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\Step1\\Step1.js",[],"C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\Step3\\Step3.js",[],"C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\Step2\\Step2.js",["103"],"C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Constants\\BottomNav.js",[],"C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\DrugSearchResults\\DrugSearchResults.js",[],"C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\DrugSearchInput\\DrugSearchInput.js",[],"C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\ModalBox\\ModalBox.js",[],"C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\RemedyInsert\\RemedyInsert.js",["104","105"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport \"./RemedyInsert.css\";\r\nimport RemedyContainer from \"../RemedyContainer/RemedyContainer\";\r\n\r\nclass RemedyInsert extends Component {\r\n  state = {\r\n    drugList: [],\r\n    response: null,\r\n    value: \"\",\r\n    suggestions: [],\r\n    drugSuggestions: [],\r\n    loading: false,\r\n    chooseSuggest: false,\r\n    notInList: \"alert-remedy-list fadeOut\",\r\n    alertMsg: \"\",\r\n    remedyComponent: [],\r\n  };\r\n  // Teach Autosuggest how to calculate suggestions for any given input value.\r\n  getSuggestions = (value) => {\r\n    const inputValue = value.trim().toLowerCase();\r\n    const inputLength = inputValue.length;\r\n\r\n    return inputLength === 0\r\n      ? []\r\n      : this.state.drugSuggestions.filter(\r\n          (lang) => lang.name.toLowerCase().slice(0, inputLength) === inputValue\r\n        );\r\n  };\r\n\r\n  // When suggestion is clicked, Autosuggest needs to populate the input\r\n  // based on the clicked suggestion. Teach Autosuggest how to calculate the\r\n  // input value for every given suggestion.\r\n  getSuggestionValue = (suggestion) => {\r\n    this.setState({ chooseSuggest: true });\r\n    return suggestion.name;\r\n  };\r\n\r\n  // Use your imagination to render suggestions.\r\n  renderSuggestion = (suggestion) => <div>{suggestion.name}</div>;\r\n\r\n  componentDidMount = () => {\r\n    const request = \"https://drugcheq.herokuapp.com/suggest\";\r\n    this.setState({ loading: true }, () => {\r\n      axios\r\n        .get(request)\r\n        .then((response) => {\r\n          this.setState({ loading: false });\r\n          this.setState({ drugSuggestions: response.data });\r\n        })\r\n        .catch((error) => {\r\n          alert(\"error!\");\r\n        });\r\n    });\r\n  };\r\n\r\n  onChange = (event, { newValue }) => {\r\n    this.setState({\r\n      value: newValue,\r\n    });\r\n  };\r\n\r\n  // Autosuggest will call this function every time you need to update suggestions.\r\n  // You already implemented this logic above, so just use it.\r\n  onSuggestionsFetchRequested = ({ value }) => {\r\n    this.setState({\r\n      suggestions: this.getSuggestions(value),\r\n      chooseSuggest: false,\r\n    });\r\n  };\r\n\r\n  // Autosuggest will call this function every time you need to clear suggestions.\r\n  onSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: [],\r\n    });\r\n  };\r\n\r\n  //Submit Drug Item to list\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.chooseSuggest === false) {\r\n      this.setState({\r\n        notInList: \"alert-remedy-list fadeIn\",\r\n        alertMsg: \"יש לבחור תרופה מתוך הרשימה\",\r\n      });\r\n\r\n      setTimeout(() => {\r\n        this.setState({\r\n          notInList: \"alert-remedy-list fadeOut\",\r\n        });\r\n      }, 2000);\r\n      // this.setState({ alertMsg: \"\" });\r\n\r\n      return;\r\n    }\r\n    this.setState({ chooseSuggest: false });\r\n\r\n    const newDrugItem = {\r\n      id: this.state.drugList.length + 1,\r\n      name: this.state.value,\r\n    };\r\n    if (newDrugItem.name.trim().length !== 0) {\r\n      if (this.props.drugInsertHandler) {\r\n        this.props.drugInsertHandler(true);\r\n      }\r\n      //if the input not contains only spaces\r\n      this.setState({ drugList: [...this.state.drugList, newDrugItem] });\r\n      this.setState({ value: \"\" });\r\n      this.props.drugListUpdate(newDrugItem);\r\n    }\r\n  };\r\n  //Change State to the drug name that typed\r\n  handleChange = (event) => {\r\n    this.setState({ value: event.target.value });\r\n  };\r\n\r\n  //handleInteractionCheck\r\n  handleInteractionCheck = () => {\r\n    alert(\"בודק אינטראקציה בין התרופות\");\r\n  };\r\n\r\n  onClickAdd = () => {\r\n    this.setState({\r\n      remedyComponent: [...this.state.remedyComponent, <RemedyContainer />],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { value, suggestions } = this.state;\r\n\r\n    // Autosuggest will pass through all these props to the input.\r\n    const inputProps = {\r\n      placeholder: \"בחר תרופה\",\r\n      value,\r\n      onChange: this.onChange,\r\n    };\r\n\r\n    let progress = (\r\n      <div style={{ margin: \"5em\" }}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n    return this.state.loading ? (\r\n      progress\r\n    ) : (\r\n      <div>\r\n        <form className=\"remedy-insert-form\" onSubmit={this.handleSubmit}>\r\n          <div className={this.state.notInList}>{this.state.alertMsg}</div>\r\n          {/* <RemedyContainer /> */}\r\n          {this.state.remedyComponent}\r\n          <button className=\"add-btn\" onClick={this.onClickAdd}>\r\n            הוסף +\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RemedyInsert;\r\n","C:\\Users\\Amit Liberman\\Desktop\\drug-cheq\\src\\Components\\RemedyContainer\\RemedyContainer.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":6,"column":17,"nodeType":"112","messageId":"113","endLine":6,"endColumn":21},{"ruleId":"106","replacedBy":"114"},{"ruleId":"108","replacedBy":"115"},{"ruleId":"110","severity":1,"message":"116","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":18},{"ruleId":"110","severity":1,"message":"117","line":131,"column":20,"nodeType":"112","messageId":"113","endLine":131,"endColumn":31},{"ruleId":"110","severity":1,"message":"118","line":134,"column":11,"nodeType":"112","messageId":"113","endLine":134,"endColumn":21},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar",["119"],["120"],"'DrugInsert' is defined but never used.","'suggestions' is assigned a value but never used.","'inputProps' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]